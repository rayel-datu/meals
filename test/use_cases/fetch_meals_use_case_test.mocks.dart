// Mocks generated by Mockito 5.4.5 from annotations
// in meal_app/test/use_cases/fetch_meals_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:meal_app/app/data/meal_api.dart' as _i2;
import 'package:meal_app/features/categories/entities/dto/category_dto.dart'
    as _i3;
import 'package:meal_app/features/meal_details/entities/dtos/meal_details_dto.dart'
    as _i5;
import 'package:meal_app/features/meal_details/entities/models/meal_details_model.dart'
    as _i8;
import 'package:meal_app/features/meals/domain/repositories/meal_repository.dart'
    as _i6;
import 'package:meal_app/features/meals/entities/dto/meal_item_dto.dart' as _i4;
import 'package:meal_app/features/meals/entities/models/meal_item_model.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMealApi_0 extends _i1.SmartFake implements _i2.MealApi {
  _FakeMealApi_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCategoryDto_1 extends _i1.SmartFake implements _i3.CategoryDto {
  _FakeCategoryDto_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMealDto_2 extends _i1.SmartFake implements _i4.MealDto {
  _FakeMealDto_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMealDetailsDto_3 extends _i1.SmartFake
    implements _i5.MealDetailsDto {
  _FakeMealDetailsDto_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MealRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMealRepository extends _i1.Mock implements _i6.MealRepository {
  MockMealRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MealApi get mealApi =>
      (super.noSuchMethod(
            Invocation.getter(#mealApi),
            returnValue: _FakeMealApi_0(this, Invocation.getter(#mealApi)),
          )
          as _i2.MealApi);

  @override
  Map<String, List<_i7.MealItemModel>> get mealsCache =>
      (super.noSuchMethod(
            Invocation.getter(#mealsCache),
            returnValue: <String, List<_i7.MealItemModel>>{},
          )
          as Map<String, List<_i7.MealItemModel>>);

  @override
  set mealsCache(Map<String, List<_i7.MealItemModel>>? _mealsCache) =>
      super.noSuchMethod(
        Invocation.setter(#mealsCache, _mealsCache),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, List<_i8.MealDetailsModel>> get mealDetailsCache =>
      (super.noSuchMethod(
            Invocation.getter(#mealDetailsCache),
            returnValue: <String, List<_i8.MealDetailsModel>>{},
          )
          as Map<String, List<_i8.MealDetailsModel>>);

  @override
  set mealDetailsCache(
    Map<String, List<_i8.MealDetailsModel>>? _mealDetailsCache,
  ) => super.noSuchMethod(
    Invocation.setter(#mealDetailsCache, _mealDetailsCache),
    returnValueForMissingStub: null,
  );

  @override
  _i9.Future<List<_i7.MealItemModel>> getMealsByCategory(
    String? category, {
    bool? refresh = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getMealsByCategory,
              [category],
              {#refresh: refresh},
            ),
            returnValue: _i9.Future<List<_i7.MealItemModel>>.value(
              <_i7.MealItemModel>[],
            ),
          )
          as _i9.Future<List<_i7.MealItemModel>>);

  @override
  _i9.Future<List<_i8.MealDetailsModel>> getMealDetailsById(
    String? id, {
    bool? refresh = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getMealDetailsById, [id], {#refresh: refresh}),
            returnValue: _i9.Future<List<_i8.MealDetailsModel>>.value(
              <_i8.MealDetailsModel>[],
            ),
          )
          as _i9.Future<List<_i8.MealDetailsModel>>);
}

/// A class which mocks [MealApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockMealApi extends _i1.Mock implements _i2.MealApi {
  MockMealApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i3.CategoryDto> getCategories() =>
      (super.noSuchMethod(
            Invocation.method(#getCategories, []),
            returnValue: _i9.Future<_i3.CategoryDto>.value(
              _FakeCategoryDto_1(this, Invocation.method(#getCategories, [])),
            ),
          )
          as _i9.Future<_i3.CategoryDto>);

  @override
  _i9.Future<_i4.MealDto> getMeals(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#getMeals, [category]),
            returnValue: _i9.Future<_i4.MealDto>.value(
              _FakeMealDto_2(this, Invocation.method(#getMeals, [category])),
            ),
          )
          as _i9.Future<_i4.MealDto>);

  @override
  _i9.Future<_i5.MealDetailsDto> getMealDetailsById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMealDetailsById, [id]),
            returnValue: _i9.Future<_i5.MealDetailsDto>.value(
              _FakeMealDetailsDto_3(
                this,
                Invocation.method(#getMealDetailsById, [id]),
              ),
            ),
          )
          as _i9.Future<_i5.MealDetailsDto>);
}

/// A class which mocks [MealItemModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockMealItemModel extends _i1.Mock implements _i7.MealItemModel {
  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
            returnValueForMissingStub: _i10.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
          )
          as String);

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i10.dummyValue<String>(this, Invocation.getter(#id)),
            returnValueForMissingStub: _i10.dummyValue<String>(
              this,
              Invocation.getter(#id),
            ),
          )
          as String);

  @override
  String get thumbnail =>
      (super.noSuchMethod(
            Invocation.getter(#thumbnail),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#thumbnail),
            ),
            returnValueForMissingStub: _i10.dummyValue<String>(
              this,
              Invocation.getter(#thumbnail),
            ),
          )
          as String);

  @override
  String searchProp() =>
      (super.noSuchMethod(
            Invocation.method(#searchProp, []),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.method(#searchProp, []),
            ),
            returnValueForMissingStub: _i10.dummyValue<String>(
              this,
              Invocation.method(#searchProp, []),
            ),
          )
          as String);
}
