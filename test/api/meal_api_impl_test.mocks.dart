// Mocks generated by Mockito 5.4.5 from annotations
// in uni_life_exam/test/api/meal_api_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;

import 'package:dio/src/adapter.dart' as _i4;
import 'package:dio/src/cancel_token.dart' as _i11;
import 'package:dio/src/dio.dart' as _i8;
import 'package:dio/src/dio_mixin.dart' as _i6;
import 'package:dio/src/headers.dart' as _i3;
import 'package:dio/src/options.dart' as _i2;
import 'package:dio/src/redirect_record.dart' as _i9;
import 'package:dio/src/response.dart' as _i7;
import 'package:dio/src/transformer.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;
import 'package:uni_life_exam/features/categories/entities/dto/category_dto.dart'
    as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRequestOptions_0 extends _i1.SmartFake
    implements _i2.RequestOptions {
  _FakeRequestOptions_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHeaders_1 extends _i1.SmartFake implements _i3.Headers {
  _FakeHeaders_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUri_2 extends _i1.SmartFake implements Uri {
  _FakeUri_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseOptions_3 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHttpClientAdapter_4 extends _i1.SmartFake
    implements _i4.HttpClientAdapter {
  _FakeHttpClientAdapter_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransformer_5 extends _i1.SmartFake implements _i5.Transformer {
  _FakeTransformer_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInterceptors_6 extends _i1.SmartFake implements _i6.Interceptors {
  _FakeInterceptors_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_7<T1> extends _i1.SmartFake implements _i7.Response<T1> {
  _FakeResponse_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDio_8 extends _i1.SmartFake implements _i8.Dio {
  _FakeDio_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Response].
///
/// See the documentation for Mockito's code generation for more information.
class MockResponse<T> extends _i1.Mock implements _i7.Response<T> {
  @override
  set data(T? _data) => super.noSuchMethod(
    Invocation.setter(#data, _data),
    returnValueForMissingStub: null,
  );

  @override
  _i2.RequestOptions get requestOptions =>
      (super.noSuchMethod(
            Invocation.getter(#requestOptions),
            returnValue: _FakeRequestOptions_0(
              this,
              Invocation.getter(#requestOptions),
            ),
            returnValueForMissingStub: _FakeRequestOptions_0(
              this,
              Invocation.getter(#requestOptions),
            ),
          )
          as _i2.RequestOptions);

  @override
  set requestOptions(_i2.RequestOptions? _requestOptions) => super.noSuchMethod(
    Invocation.setter(#requestOptions, _requestOptions),
    returnValueForMissingStub: null,
  );

  @override
  set statusCode(int? _statusCode) => super.noSuchMethod(
    Invocation.setter(#statusCode, _statusCode),
    returnValueForMissingStub: null,
  );

  @override
  set statusMessage(String? _statusMessage) => super.noSuchMethod(
    Invocation.setter(#statusMessage, _statusMessage),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Headers get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: _FakeHeaders_1(this, Invocation.getter(#headers)),
            returnValueForMissingStub: _FakeHeaders_1(
              this,
              Invocation.getter(#headers),
            ),
          )
          as _i3.Headers);

  @override
  set headers(_i3.Headers? _headers) => super.noSuchMethod(
    Invocation.setter(#headers, _headers),
    returnValueForMissingStub: null,
  );

  @override
  bool get isRedirect =>
      (super.noSuchMethod(
            Invocation.getter(#isRedirect),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  set isRedirect(bool? _isRedirect) => super.noSuchMethod(
    Invocation.setter(#isRedirect, _isRedirect),
    returnValueForMissingStub: null,
  );

  @override
  List<_i9.RedirectRecord> get redirects =>
      (super.noSuchMethod(
            Invocation.getter(#redirects),
            returnValue: <_i9.RedirectRecord>[],
            returnValueForMissingStub: <_i9.RedirectRecord>[],
          )
          as List<_i9.RedirectRecord>);

  @override
  set redirects(List<_i9.RedirectRecord>? _redirects) => super.noSuchMethod(
    Invocation.setter(#redirects, _redirects),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> get extra =>
      (super.noSuchMethod(
            Invocation.getter(#extra),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  set extra(Map<String, dynamic>? _extra) => super.noSuchMethod(
    Invocation.setter(#extra, _extra),
    returnValueForMissingStub: null,
  );

  @override
  Uri get realUri =>
      (super.noSuchMethod(
            Invocation.getter(#realUri),
            returnValue: _FakeUri_2(this, Invocation.getter(#realUri)),
            returnValueForMissingStub: _FakeUri_2(
              this,
              Invocation.getter(#realUri),
            ),
          )
          as Uri);
}

/// A class which mocks [RequestOptions].
///
/// See the documentation for Mockito's code generation for more information.
class MockRequestOptions extends _i1.Mock implements _i2.RequestOptions {
  @override
  set sourceStackTrace(StackTrace? _sourceStackTrace) => super.noSuchMethod(
    Invocation.setter(#sourceStackTrace, _sourceStackTrace),
    returnValueForMissingStub: null,
  );

  @override
  set data(dynamic _data) => super.noSuchMethod(
    Invocation.setter(#data, _data),
    returnValueForMissingStub: null,
  );

  @override
  String get path =>
      (super.noSuchMethod(
            Invocation.getter(#path),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#path),
            ),
            returnValueForMissingStub: _i10.dummyValue<String>(
              this,
              Invocation.getter(#path),
            ),
          )
          as String);

  @override
  set path(String? _path) => super.noSuchMethod(
    Invocation.setter(#path, _path),
    returnValueForMissingStub: null,
  );

  @override
  set cancelToken(_i11.CancelToken? _cancelToken) => super.noSuchMethod(
    Invocation.setter(#cancelToken, _cancelToken),
    returnValueForMissingStub: null,
  );

  @override
  set onReceiveProgress(_i2.ProgressCallback? _onReceiveProgress) =>
      super.noSuchMethod(
        Invocation.setter(#onReceiveProgress, _onReceiveProgress),
        returnValueForMissingStub: null,
      );

  @override
  set onSendProgress(_i2.ProgressCallback? _onSendProgress) =>
      super.noSuchMethod(
        Invocation.setter(#onSendProgress, _onSendProgress),
        returnValueForMissingStub: null,
      );

  @override
  Uri get uri =>
      (super.noSuchMethod(
            Invocation.getter(#uri),
            returnValue: _FakeUri_2(this, Invocation.getter(#uri)),
            returnValueForMissingStub: _FakeUri_2(
              this,
              Invocation.getter(#uri),
            ),
          )
          as Uri);

  @override
  String get method =>
      (super.noSuchMethod(
            Invocation.getter(#method),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#method),
            ),
            returnValueForMissingStub: _i10.dummyValue<String>(
              this,
              Invocation.getter(#method),
            ),
          )
          as String);

  @override
  set method(String? _method) => super.noSuchMethod(
    Invocation.setter(#method, _method),
    returnValueForMissingStub: null,
  );

  @override
  bool get preserveHeaderCase =>
      (super.noSuchMethod(
            Invocation.getter(#preserveHeaderCase),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  set preserveHeaderCase(bool? _preserveHeaderCase) => super.noSuchMethod(
    Invocation.setter(#preserveHeaderCase, _preserveHeaderCase),
    returnValueForMissingStub: null,
  );

  @override
  _i2.ResponseType get responseType =>
      (super.noSuchMethod(
            Invocation.getter(#responseType),
            returnValue: _i2.ResponseType.json,
            returnValueForMissingStub: _i2.ResponseType.json,
          )
          as _i2.ResponseType);

  @override
  set responseType(_i2.ResponseType? _responseType) => super.noSuchMethod(
    Invocation.setter(#responseType, _responseType),
    returnValueForMissingStub: null,
  );

  @override
  _i2.ValidateStatus get validateStatus =>
      (super.noSuchMethod(
            Invocation.getter(#validateStatus),
            returnValue: (int? status) => false,
            returnValueForMissingStub: (int? status) => false,
          )
          as _i2.ValidateStatus);

  @override
  set validateStatus(_i2.ValidateStatus? _validateStatus) => super.noSuchMethod(
    Invocation.setter(#validateStatus, _validateStatus),
    returnValueForMissingStub: null,
  );

  @override
  bool get receiveDataWhenStatusError =>
      (super.noSuchMethod(
            Invocation.getter(#receiveDataWhenStatusError),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  set receiveDataWhenStatusError(bool? _receiveDataWhenStatusError) =>
      super.noSuchMethod(
        Invocation.setter(
          #receiveDataWhenStatusError,
          _receiveDataWhenStatusError,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> get extra =>
      (super.noSuchMethod(
            Invocation.getter(#extra),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  set extra(Map<String, dynamic>? _extra) => super.noSuchMethod(
    Invocation.setter(#extra, _extra),
    returnValueForMissingStub: null,
  );

  @override
  bool get followRedirects =>
      (super.noSuchMethod(
            Invocation.getter(#followRedirects),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  set followRedirects(bool? _followRedirects) => super.noSuchMethod(
    Invocation.setter(#followRedirects, _followRedirects),
    returnValueForMissingStub: null,
  );

  @override
  int get maxRedirects =>
      (super.noSuchMethod(
            Invocation.getter(#maxRedirects),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  set maxRedirects(int? _maxRedirects) => super.noSuchMethod(
    Invocation.setter(#maxRedirects, _maxRedirects),
    returnValueForMissingStub: null,
  );

  @override
  bool get persistentConnection =>
      (super.noSuchMethod(
            Invocation.getter(#persistentConnection),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  set persistentConnection(bool? _persistentConnection) => super.noSuchMethod(
    Invocation.setter(#persistentConnection, _persistentConnection),
    returnValueForMissingStub: null,
  );

  @override
  set requestEncoder(_i2.RequestEncoder? _requestEncoder) => super.noSuchMethod(
    Invocation.setter(#requestEncoder, _requestEncoder),
    returnValueForMissingStub: null,
  );

  @override
  set responseDecoder(_i2.ResponseDecoder? _responseDecoder) =>
      super.noSuchMethod(
        Invocation.setter(#responseDecoder, _responseDecoder),
        returnValueForMissingStub: null,
      );

  @override
  _i2.ListFormat get listFormat =>
      (super.noSuchMethod(
            Invocation.getter(#listFormat),
            returnValue: _i2.ListFormat.csv,
            returnValueForMissingStub: _i2.ListFormat.csv,
          )
          as _i2.ListFormat);

  @override
  set listFormat(_i2.ListFormat? _listFormat) => super.noSuchMethod(
    Invocation.setter(#listFormat, _listFormat),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  set headers(Map<String, dynamic>? headers) => super.noSuchMethod(
    Invocation.setter(#headers, headers),
    returnValueForMissingStub: null,
  );

  @override
  set sendTimeout(Duration? value) => super.noSuchMethod(
    Invocation.setter(#sendTimeout, value),
    returnValueForMissingStub: null,
  );

  @override
  set receiveTimeout(Duration? value) => super.noSuchMethod(
    Invocation.setter(#receiveTimeout, value),
    returnValueForMissingStub: null,
  );

  @override
  set contentType(String? contentType) => super.noSuchMethod(
    Invocation.setter(#contentType, contentType),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> get queryParameters =>
      (super.noSuchMethod(
            Invocation.getter(#queryParameters),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  set queryParameters(Map<String, dynamic>? _queryParameters) =>
      super.noSuchMethod(
        Invocation.setter(#queryParameters, _queryParameters),
        returnValueForMissingStub: null,
      );

  @override
  String get baseUrl =>
      (super.noSuchMethod(
            Invocation.getter(#baseUrl),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#baseUrl),
            ),
            returnValueForMissingStub: _i10.dummyValue<String>(
              this,
              Invocation.getter(#baseUrl),
            ),
          )
          as String);

  @override
  set baseUrl(String? value) => super.noSuchMethod(
    Invocation.setter(#baseUrl, value),
    returnValueForMissingStub: null,
  );

  @override
  set connectTimeout(Duration? value) => super.noSuchMethod(
    Invocation.setter(#connectTimeout, value),
    returnValueForMissingStub: null,
  );

  @override
  _i2.RequestOptions copyWith({
    String? method,
    Duration? sendTimeout,
    Duration? receiveTimeout,
    Duration? connectTimeout,
    dynamic data,
    String? path,
    Map<String, dynamic>? queryParameters,
    String? baseUrl,
    _i2.ProgressCallback? onReceiveProgress,
    _i2.ProgressCallback? onSendProgress,
    _i11.CancelToken? cancelToken,
    Map<String, dynamic>? extra,
    Map<String, dynamic>? headers,
    bool? preserveHeaderCase,
    _i2.ResponseType? responseType,
    String? contentType,
    _i2.ValidateStatus? validateStatus,
    bool? receiveDataWhenStatusError,
    bool? followRedirects,
    int? maxRedirects,
    bool? persistentConnection,
    _i2.RequestEncoder? requestEncoder,
    _i2.ResponseDecoder? responseDecoder,
    _i2.ListFormat? listFormat,
    bool? setRequestContentTypeWhenNoPayload,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#copyWith, [], {
              #method: method,
              #sendTimeout: sendTimeout,
              #receiveTimeout: receiveTimeout,
              #connectTimeout: connectTimeout,
              #data: data,
              #path: path,
              #queryParameters: queryParameters,
              #baseUrl: baseUrl,
              #onReceiveProgress: onReceiveProgress,
              #onSendProgress: onSendProgress,
              #cancelToken: cancelToken,
              #extra: extra,
              #headers: headers,
              #preserveHeaderCase: preserveHeaderCase,
              #responseType: responseType,
              #contentType: contentType,
              #validateStatus: validateStatus,
              #receiveDataWhenStatusError: receiveDataWhenStatusError,
              #followRedirects: followRedirects,
              #maxRedirects: maxRedirects,
              #persistentConnection: persistentConnection,
              #requestEncoder: requestEncoder,
              #responseDecoder: responseDecoder,
              #listFormat: listFormat,
              #setRequestContentTypeWhenNoPayload:
                  setRequestContentTypeWhenNoPayload,
            }),
            returnValue: _FakeRequestOptions_0(
              this,
              Invocation.method(#copyWith, [], {
                #method: method,
                #sendTimeout: sendTimeout,
                #receiveTimeout: receiveTimeout,
                #connectTimeout: connectTimeout,
                #data: data,
                #path: path,
                #queryParameters: queryParameters,
                #baseUrl: baseUrl,
                #onReceiveProgress: onReceiveProgress,
                #onSendProgress: onSendProgress,
                #cancelToken: cancelToken,
                #extra: extra,
                #headers: headers,
                #preserveHeaderCase: preserveHeaderCase,
                #responseType: responseType,
                #contentType: contentType,
                #validateStatus: validateStatus,
                #receiveDataWhenStatusError: receiveDataWhenStatusError,
                #followRedirects: followRedirects,
                #maxRedirects: maxRedirects,
                #persistentConnection: persistentConnection,
                #requestEncoder: requestEncoder,
                #responseDecoder: responseDecoder,
                #listFormat: listFormat,
                #setRequestContentTypeWhenNoPayload:
                    setRequestContentTypeWhenNoPayload,
              }),
            ),
            returnValueForMissingStub: _FakeRequestOptions_0(
              this,
              Invocation.method(#copyWith, [], {
                #method: method,
                #sendTimeout: sendTimeout,
                #receiveTimeout: receiveTimeout,
                #connectTimeout: connectTimeout,
                #data: data,
                #path: path,
                #queryParameters: queryParameters,
                #baseUrl: baseUrl,
                #onReceiveProgress: onReceiveProgress,
                #onSendProgress: onSendProgress,
                #cancelToken: cancelToken,
                #extra: extra,
                #headers: headers,
                #preserveHeaderCase: preserveHeaderCase,
                #responseType: responseType,
                #contentType: contentType,
                #validateStatus: validateStatus,
                #receiveDataWhenStatusError: receiveDataWhenStatusError,
                #followRedirects: followRedirects,
                #maxRedirects: maxRedirects,
                #persistentConnection: persistentConnection,
                #requestEncoder: requestEncoder,
                #responseDecoder: responseDecoder,
                #listFormat: listFormat,
                #setRequestContentTypeWhenNoPayload:
                    setRequestContentTypeWhenNoPayload,
              }),
            ),
          )
          as _i2.RequestOptions);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i8.Dio {
  @override
  _i2.BaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeBaseOptions_3(this, Invocation.getter(#options)),
            returnValueForMissingStub: _FakeBaseOptions_3(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i2.BaseOptions);

  @override
  set options(_i2.BaseOptions? _options) => super.noSuchMethod(
    Invocation.setter(#options, _options),
    returnValueForMissingStub: null,
  );

  @override
  _i4.HttpClientAdapter get httpClientAdapter =>
      (super.noSuchMethod(
            Invocation.getter(#httpClientAdapter),
            returnValue: _FakeHttpClientAdapter_4(
              this,
              Invocation.getter(#httpClientAdapter),
            ),
            returnValueForMissingStub: _FakeHttpClientAdapter_4(
              this,
              Invocation.getter(#httpClientAdapter),
            ),
          )
          as _i4.HttpClientAdapter);

  @override
  set httpClientAdapter(_i4.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(#httpClientAdapter, _httpClientAdapter),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Transformer get transformer =>
      (super.noSuchMethod(
            Invocation.getter(#transformer),
            returnValue: _FakeTransformer_5(
              this,
              Invocation.getter(#transformer),
            ),
            returnValueForMissingStub: _FakeTransformer_5(
              this,
              Invocation.getter(#transformer),
            ),
          )
          as _i5.Transformer);

  @override
  set transformer(_i5.Transformer? _transformer) => super.noSuchMethod(
    Invocation.setter(#transformer, _transformer),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Interceptors get interceptors =>
      (super.noSuchMethod(
            Invocation.getter(#interceptors),
            returnValue: _FakeInterceptors_6(
              this,
              Invocation.getter(#interceptors),
            ),
            returnValueForMissingStub: _FakeInterceptors_6(
              this,
              Invocation.getter(#interceptors),
            ),
          )
          as _i6.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
    Invocation.method(#close, [], {#force: force}),
    returnValueForMissingStub: null,
  );

  @override
  _i12.Future<_i7.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #head,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #head,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #head,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i12.Future<_i7.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #headUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #headUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #headUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i12.Future<_i7.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #get,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #get,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i12.Future<_i7.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #getUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #getUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i12.Future<_i7.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #post,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #post,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i12.Future<_i7.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #postUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #postUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #postUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i12.Future<_i7.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #put,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #put,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i12.Future<_i7.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #putUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #putUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #putUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i12.Future<_i7.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #patch,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #patch,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i12.Future<_i7.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patchUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #patchUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #patchUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i12.Future<_i7.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #delete,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #delete,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i12.Future<_i7.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #deleteUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #deleteUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #deleteUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i12.Future<_i7.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i11.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i2.FileAccessMode? fileAccessMode = _i2.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #download,
              [urlPath, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i12.Future<_i7.Response<dynamic>>.value(
              _FakeResponse_7<dynamic>(
                this,
                Invocation.method(
                  #download,
                  [urlPath, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<dynamic>>.value(
              _FakeResponse_7<dynamic>(
                this,
                Invocation.method(
                  #download,
                  [urlPath, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<dynamic>>);

  @override
  _i12.Future<_i7.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    _i11.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i2.FileAccessMode? fileAccessMode = _i2.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #downloadUri,
              [uri, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i12.Future<_i7.Response<dynamic>>.value(
              _FakeResponse_7<dynamic>(
                this,
                Invocation.method(
                  #downloadUri,
                  [uri, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<dynamic>>.value(
              _FakeResponse_7<dynamic>(
                this,
                Invocation.method(
                  #downloadUri,
                  [uri, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<dynamic>>);

  @override
  _i12.Future<_i7.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i11.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #request,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #request,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #request,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i12.Future<_i7.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i11.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #requestUri,
              [uri],
              {
                #data: data,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #requestUri,
                  [uri],
                  {
                    #data: data,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(
                  #requestUri,
                  [uri],
                  {
                    #data: data,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i12.Future<_i7.Response<T>> fetch<T>(_i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
            Invocation.method(#fetch, [requestOptions]),
            returnValue: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(#fetch, [requestOptions]),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.Response<T>>.value(
              _FakeResponse_7<T>(
                this,
                Invocation.method(#fetch, [requestOptions]),
              ),
            ),
          )
          as _i12.Future<_i7.Response<T>>);

  @override
  _i8.Dio clone({
    _i2.BaseOptions? options,
    _i6.Interceptors? interceptors,
    _i4.HttpClientAdapter? httpClientAdapter,
    _i5.Transformer? transformer,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#clone, [], {
              #options: options,
              #interceptors: interceptors,
              #httpClientAdapter: httpClientAdapter,
              #transformer: transformer,
            }),
            returnValue: _FakeDio_8(
              this,
              Invocation.method(#clone, [], {
                #options: options,
                #interceptors: interceptors,
                #httpClientAdapter: httpClientAdapter,
                #transformer: transformer,
              }),
            ),
            returnValueForMissingStub: _FakeDio_8(
              this,
              Invocation.method(#clone, [], {
                #options: options,
                #interceptors: interceptors,
                #httpClientAdapter: httpClientAdapter,
                #transformer: transformer,
              }),
            ),
          )
          as _i8.Dio);
}

/// A class which mocks [BaseOptions].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseOptions extends _i1.Mock implements _i2.BaseOptions {
  @override
  String get method =>
      (super.noSuchMethod(
            Invocation.getter(#method),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#method),
            ),
            returnValueForMissingStub: _i10.dummyValue<String>(
              this,
              Invocation.getter(#method),
            ),
          )
          as String);

  @override
  set method(String? _method) => super.noSuchMethod(
    Invocation.setter(#method, _method),
    returnValueForMissingStub: null,
  );

  @override
  bool get preserveHeaderCase =>
      (super.noSuchMethod(
            Invocation.getter(#preserveHeaderCase),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  set preserveHeaderCase(bool? _preserveHeaderCase) => super.noSuchMethod(
    Invocation.setter(#preserveHeaderCase, _preserveHeaderCase),
    returnValueForMissingStub: null,
  );

  @override
  _i2.ResponseType get responseType =>
      (super.noSuchMethod(
            Invocation.getter(#responseType),
            returnValue: _i2.ResponseType.json,
            returnValueForMissingStub: _i2.ResponseType.json,
          )
          as _i2.ResponseType);

  @override
  set responseType(_i2.ResponseType? _responseType) => super.noSuchMethod(
    Invocation.setter(#responseType, _responseType),
    returnValueForMissingStub: null,
  );

  @override
  _i2.ValidateStatus get validateStatus =>
      (super.noSuchMethod(
            Invocation.getter(#validateStatus),
            returnValue: (int? status) => false,
            returnValueForMissingStub: (int? status) => false,
          )
          as _i2.ValidateStatus);

  @override
  set validateStatus(_i2.ValidateStatus? _validateStatus) => super.noSuchMethod(
    Invocation.setter(#validateStatus, _validateStatus),
    returnValueForMissingStub: null,
  );

  @override
  bool get receiveDataWhenStatusError =>
      (super.noSuchMethod(
            Invocation.getter(#receiveDataWhenStatusError),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  set receiveDataWhenStatusError(bool? _receiveDataWhenStatusError) =>
      super.noSuchMethod(
        Invocation.setter(
          #receiveDataWhenStatusError,
          _receiveDataWhenStatusError,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> get extra =>
      (super.noSuchMethod(
            Invocation.getter(#extra),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  set extra(Map<String, dynamic>? _extra) => super.noSuchMethod(
    Invocation.setter(#extra, _extra),
    returnValueForMissingStub: null,
  );

  @override
  bool get followRedirects =>
      (super.noSuchMethod(
            Invocation.getter(#followRedirects),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  set followRedirects(bool? _followRedirects) => super.noSuchMethod(
    Invocation.setter(#followRedirects, _followRedirects),
    returnValueForMissingStub: null,
  );

  @override
  int get maxRedirects =>
      (super.noSuchMethod(
            Invocation.getter(#maxRedirects),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  set maxRedirects(int? _maxRedirects) => super.noSuchMethod(
    Invocation.setter(#maxRedirects, _maxRedirects),
    returnValueForMissingStub: null,
  );

  @override
  bool get persistentConnection =>
      (super.noSuchMethod(
            Invocation.getter(#persistentConnection),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  set persistentConnection(bool? _persistentConnection) => super.noSuchMethod(
    Invocation.setter(#persistentConnection, _persistentConnection),
    returnValueForMissingStub: null,
  );

  @override
  set requestEncoder(_i2.RequestEncoder? _requestEncoder) => super.noSuchMethod(
    Invocation.setter(#requestEncoder, _requestEncoder),
    returnValueForMissingStub: null,
  );

  @override
  set responseDecoder(_i2.ResponseDecoder? _responseDecoder) =>
      super.noSuchMethod(
        Invocation.setter(#responseDecoder, _responseDecoder),
        returnValueForMissingStub: null,
      );

  @override
  _i2.ListFormat get listFormat =>
      (super.noSuchMethod(
            Invocation.getter(#listFormat),
            returnValue: _i2.ListFormat.csv,
            returnValueForMissingStub: _i2.ListFormat.csv,
          )
          as _i2.ListFormat);

  @override
  set listFormat(_i2.ListFormat? _listFormat) => super.noSuchMethod(
    Invocation.setter(#listFormat, _listFormat),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  set headers(Map<String, dynamic>? headers) => super.noSuchMethod(
    Invocation.setter(#headers, headers),
    returnValueForMissingStub: null,
  );

  @override
  set sendTimeout(Duration? value) => super.noSuchMethod(
    Invocation.setter(#sendTimeout, value),
    returnValueForMissingStub: null,
  );

  @override
  set receiveTimeout(Duration? value) => super.noSuchMethod(
    Invocation.setter(#receiveTimeout, value),
    returnValueForMissingStub: null,
  );

  @override
  set contentType(String? contentType) => super.noSuchMethod(
    Invocation.setter(#contentType, contentType),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> get queryParameters =>
      (super.noSuchMethod(
            Invocation.getter(#queryParameters),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  set queryParameters(Map<String, dynamic>? _queryParameters) =>
      super.noSuchMethod(
        Invocation.setter(#queryParameters, _queryParameters),
        returnValueForMissingStub: null,
      );

  @override
  String get baseUrl =>
      (super.noSuchMethod(
            Invocation.getter(#baseUrl),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#baseUrl),
            ),
            returnValueForMissingStub: _i10.dummyValue<String>(
              this,
              Invocation.getter(#baseUrl),
            ),
          )
          as String);

  @override
  set baseUrl(String? value) => super.noSuchMethod(
    Invocation.setter(#baseUrl, value),
    returnValueForMissingStub: null,
  );

  @override
  set connectTimeout(Duration? value) => super.noSuchMethod(
    Invocation.setter(#connectTimeout, value),
    returnValueForMissingStub: null,
  );

  @override
  _i2.BaseOptions copyWith({
    String? method,
    String? baseUrl,
    Map<String, dynamic>? queryParameters,
    String? path,
    Duration? connectTimeout,
    Duration? receiveTimeout,
    Duration? sendTimeout,
    Map<String, Object?>? extra,
    Map<String, Object?>? headers,
    bool? preserveHeaderCase,
    _i2.ResponseType? responseType,
    String? contentType,
    _i2.ValidateStatus? validateStatus,
    bool? receiveDataWhenStatusError,
    bool? followRedirects,
    int? maxRedirects,
    bool? persistentConnection,
    _i2.RequestEncoder? requestEncoder,
    _i2.ResponseDecoder? responseDecoder,
    _i2.ListFormat? listFormat,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#copyWith, [], {
              #method: method,
              #baseUrl: baseUrl,
              #queryParameters: queryParameters,
              #path: path,
              #connectTimeout: connectTimeout,
              #receiveTimeout: receiveTimeout,
              #sendTimeout: sendTimeout,
              #extra: extra,
              #headers: headers,
              #preserveHeaderCase: preserveHeaderCase,
              #responseType: responseType,
              #contentType: contentType,
              #validateStatus: validateStatus,
              #receiveDataWhenStatusError: receiveDataWhenStatusError,
              #followRedirects: followRedirects,
              #maxRedirects: maxRedirects,
              #persistentConnection: persistentConnection,
              #requestEncoder: requestEncoder,
              #responseDecoder: responseDecoder,
              #listFormat: listFormat,
            }),
            returnValue: _FakeBaseOptions_3(
              this,
              Invocation.method(#copyWith, [], {
                #method: method,
                #baseUrl: baseUrl,
                #queryParameters: queryParameters,
                #path: path,
                #connectTimeout: connectTimeout,
                #receiveTimeout: receiveTimeout,
                #sendTimeout: sendTimeout,
                #extra: extra,
                #headers: headers,
                #preserveHeaderCase: preserveHeaderCase,
                #responseType: responseType,
                #contentType: contentType,
                #validateStatus: validateStatus,
                #receiveDataWhenStatusError: receiveDataWhenStatusError,
                #followRedirects: followRedirects,
                #maxRedirects: maxRedirects,
                #persistentConnection: persistentConnection,
                #requestEncoder: requestEncoder,
                #responseDecoder: responseDecoder,
                #listFormat: listFormat,
              }),
            ),
            returnValueForMissingStub: _FakeBaseOptions_3(
              this,
              Invocation.method(#copyWith, [], {
                #method: method,
                #baseUrl: baseUrl,
                #queryParameters: queryParameters,
                #path: path,
                #connectTimeout: connectTimeout,
                #receiveTimeout: receiveTimeout,
                #sendTimeout: sendTimeout,
                #extra: extra,
                #headers: headers,
                #preserveHeaderCase: preserveHeaderCase,
                #responseType: responseType,
                #contentType: contentType,
                #validateStatus: validateStatus,
                #receiveDataWhenStatusError: receiveDataWhenStatusError,
                #followRedirects: followRedirects,
                #maxRedirects: maxRedirects,
                #persistentConnection: persistentConnection,
                #requestEncoder: requestEncoder,
                #responseDecoder: responseDecoder,
                #listFormat: listFormat,
              }),
            ),
          )
          as _i2.BaseOptions);
}

/// A class which mocks [CategoryDto].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryDto extends _i1.Mock implements _i13.CategoryDto {
  @override
  List<_i13.CategoryItemDto> get categories =>
      (super.noSuchMethod(
            Invocation.getter(#categories),
            returnValue: <_i13.CategoryItemDto>[],
            returnValueForMissingStub: <_i13.CategoryItemDto>[],
          )
          as List<_i13.CategoryItemDto>);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}
